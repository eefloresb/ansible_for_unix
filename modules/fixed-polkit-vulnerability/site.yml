- name: "Install Package to solve polkit vulnerability"
  hosts: all
  gather_facts: true
  vars:
  #Â directory contain instaler packages  
    ruta_polkit: /Users/edwinflores/Downloads/POLKIT
    dest_folder: "install_rpm_polkit"
    remediation_redhat_6: false
  become: true
  tasks:
    - name: "Validate rpm polkit installed "
      shell: rpm -qa|grep --color -E "polkit-[[:digit:]]\.[[:digit:]]+\-[[:digit:]]+\.el[[:digit:]].*86_64"
      register:
        command_result
      failed_when:
        - command_result.rc == 1

    - name: "make directory scripts"
      file:
        path: /scripts
        owner: root
        group: root
        mode: '0750'
        state: directory

    - name: "make directory scripts"
      file:
        path: /tmp/{{dest_folder}}
        owner: root
        group: root
        mode: '0750'
        state: directory

    - when: ansible_distribution == 'RedHat'
      include_tasks: tasks/redhat.yml

################## Configuration process to init for mitigate redhat 6

- name: "[TEMPORARY MITIGATION] Block pkexec with empty first argument with systemtap"
  hosts: all
  become: true
  tasks:

    - when:
        - ansible_distribution_major_version | int == 6
        - ansible_distribution == 'RedHat'
        - remediation_redhat_6 == true
      
      block:

    # RHEL6 with SELinux enabled needs libselinux-python for Ansible copy operation to work.
          - name: (RHEL 6) Install packages
            yum:
              name:
                - libselinux-python
                - systemtap
                - yum-utils
                - kernel-devel-{{ ansible_kernel }}

          - name: (RHEL 6) Install polkit debuginfo
            command: debuginfo-install -y polkit

          - name: Create systemtap script
            copy:
              dest: /scripts/pkexec-block.stp
              owner: root
              group: root
              mode: '0600'
              force: false
              content: |
                probe process("/usr/bin/pkexec").function("main")  {
                  if (cmdline_arg(1) == "")
                    raise(9);
                }

          - name: Checking if stap_pkexec_block module is already loaded
            command: grep -Fq stap_pkexec_block /proc/modules
            register: loaded_module
            changed_when: false
            failed_when: loaded_module.rc == 2
            check_mode: false

          - when: loaded_module.rc == 1
            name: Install systemtap script
            command: stap -F -o /var/log/pkexec-block.log -S 1 -m stap_pkexec_block -g /scripts/pkexec-block.stp
            register: stap_run
            failed_when: false

          - when: stap_run.rc |default(0) != 0
            fail:
              msg: "The systemtap script could not be installed. If this system has Secure Boot enabled, a signed kernel module must be generated to use this mitigation. See the Security Bulletin for more information."

          - name: (RHEL6) Copiar archivos init
            template:
              src: "files/autostart-polkit-mitigate-el6.j2"
              dest: "/etc/rc.d/init.d/autostart-polkit"
              owner: root
              group: root
              mode: '755'

          - name: (RHEL6) Copiar archivos scripts
            template:
              src: "scripts/{{item}}"
              dest: "/scripts/{{item}}"
              owner: root
              group: root
              mode: '755'
            loop:
              - polkit-mitigate-start.sh
              - polkit-mitigate-stop.sh

          - name: load scripts into operative system
            tags: web
            shell: |
              chkconfig --add autostart-polkit
              chkconfig autostart-polkit on

- hosts: localhost
  connection: local
  vars:
    report_file: reporte_polkit.csv
  tasks:
    - name: Crear nuevo archivo de reporte
      local_action:
        module: copy
        dest: "{{ report_file }}"
        content: |
          "Hostname","IP principal","Sistema operativo","Arquitectura","Details vulnerability"

- name: "Report polkit Server vulnerability status"
  hosts: all
  vars:
    report_file: reporte_polkit.csv
  become: true
  tasks:

    - name: "copy script to remote server to validate vulnerability"
      copy:
            src: scripts/cve-2021-4034--2022-01-25-0936.sh
            dest: /tmp/cve-2021-4034--2022-01-25-0936.sh
            owner: root
            group: root
            mode: '755'

    - name: "Ejecutar script remoto"
      shell: |
        ./cve-2021-4034--2022-01-25-0936.sh
      args:
        chdir: /tmp
      register: script_result
      failed_when: script_result == 2

    - name: "Ejecutar check process in {{ansible_distribution}} {{ansible_distribution_major_version}}"
      shell: |
        grep -Fq stap_pkexec_block /proc/modules
      register: loaded_module
      changed_when: false
      failed_when: loaded_module.rc == 2
      check_mode: false

    - when: ansible_distribution_major_version | int >= 6
      ansible.builtin.set_fact:
        #result_6 : "{{script_result.stdout | regex_search('This polkit version is vulnerable', ignorecase=True) }}"
        #result_6: '{{ "This configuration script to mitigate polkit" if loaded_module.rc == 0 else "This Servers is Vulnerable, process not exist contact to sysadmin@canvia.com" }}'
        result_6: "{{ script_result.stdout | regex_search('this polkit version is not vulnerable', ignorecase=True) }}" 

    - when: ansible_distribution_major_version | int >= 7
      ansible.builtin.set_fact:
        result_7 : "{{script_result.stdout | regex_search('This polkit version is not vulnerable', ignorecase=True) }}"

    - name: Escribir reporte
      shell: |
        echo "{{ ansible_hostname }},{{ ansible_default_ipv4.address }},{{ ansible_system }} {{ ansible_distribution }} {{ansible_distribution_major_version}}," \
        "{{ ansible_architecture }},{{result_7 | default(result_6)}}" >> {{ report_file }}
      delegate_to: localhost

